[{"/Users/omarp/workspace/React/Hanabi/src/index.js":"1","/Users/omarp/workspace/React/Hanabi/src/App.js":"2","/Users/omarp/workspace/React/Hanabi/src/reportWebVitals.js":"3","/Users/omarp/workspace/React/Hanabi/src/Router.js":"4","/Users/omarp/workspace/React/Hanabi/src/tools/generator/GameCodeGenerator.js":"5","/Users/omarp/workspace/React/Hanabi/src/services/firebase/firestore.js":"6","/Users/omarp/workspace/React/Hanabi/src/pages/SignIn.js":"7","/Users/omarp/workspace/React/Hanabi/src/pages/Home.js":"8","/Users/omarp/workspace/React/Hanabi/src/pages/SignedIn.js":"9","/Users/omarp/workspace/React/Hanabi/src/pages/Lobby.js":"10","/Users/omarp/workspace/React/Hanabi/src/tools/generator/CardShuffler.js":"11"},{"size":501,"mtime":1609632149494,"results":"12","hashOfConfig":"13"},{"size":225,"mtime":1609707798911,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609553820276,"results":"15","hashOfConfig":"13"},{"size":742,"mtime":1610165848279,"results":"16","hashOfConfig":"13"},{"size":435,"mtime":1609725203752,"results":"17","hashOfConfig":"13"},{"size":4402,"mtime":1610264195754,"results":"18","hashOfConfig":"13"},{"size":562,"mtime":1609988778875,"results":"19","hashOfConfig":"13"},{"size":964,"mtime":1610002676492,"results":"20","hashOfConfig":"13"},{"size":2597,"mtime":1610261168421,"results":"21","hashOfConfig":"13"},{"size":4532,"mtime":1610265468829,"results":"22","hashOfConfig":"13"},{"size":5063,"mtime":1610263136032,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cpmhio",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"/Users/omarp/workspace/React/Hanabi/src/index.js",[],["54","55"],"/Users/omarp/workspace/React/Hanabi/src/App.js",[],"/Users/omarp/workspace/React/Hanabi/src/reportWebVitals.js",[],"/Users/omarp/workspace/React/Hanabi/src/Router.js",["56","57","58"],"import React, { Suspense, lazy, useState } from \"react\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\n\nimport Home from \"./pages/Home\";\nimport Lobby from \"./pages/Lobby\";\n\nexport default function AppRouter() {\n    return (\n      <Router>\n        \n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/lobby/:code\">\n              <Lobby />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/lobby/:code/start\">\n              <Home />\n            </Route>\n          </Switch>\n      </Router>\n    );\n  }","/Users/omarp/workspace/React/Hanabi/src/tools/generator/GameCodeGenerator.js",[],["59","60"],"/Users/omarp/workspace/React/Hanabi/src/services/firebase/firestore.js",["61","62"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport GameCodeGenerator from '../../tools/generator/GameCodeGenerator';\nimport CardShuffler from '../../tools/generator/CardShuffler';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBldhn6e08q69OTNq246uskucmmKfUZjvs\",\n    authDomain: \"hanabi-64915.firebaseapp.com\",\n    projectId: \"hanabi-64915\",\n    storageBucket: \"hanabi-64915.appspot.com\",\n    messagingSenderId: \"653806150744\",\n    appId: \"1:653806150744:web:eedc14e49aae6d1852962d\",\n    measurementId: \"G-C72H5J6WQ9\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const db = firebase.firestore();\nexport const auth = firebase.auth();\n\n// const [user] = useAuthState(auth);\n\nexport const authSignIn = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n}\n\nexport const createLobby = async () => {\n    // db.collection('lobby').add\n    let gameCodeExists = false;\n    let result;\n    let gameCode = null;\n    while (!gameCodeExists){\n        try {\n            gameCode = GameCodeGenerator();\n            result = await verifyGameCode(gameCode);\n            if (!result){\n                try{\n                    await db.collection('lobby').doc(gameCode).set({\n                        host: auth.currentUser.uid,\n                        playerCount: 1,\n                        inSession: false,\n                        playerList: [{name: auth.currentUser.displayName, id: auth.currentUser.uid}],\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                        code: gameCode\n                    })    \n                    gameCodeExists = true;\n                } catch (err){\n                    console.log(err);\n                }\n            } \n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    if (gameCode != null && gameCodeExists){\n        return {code: gameCode, status: 200};\n    } else if (gameCode === null){\n        return {code: null, status: 500};\n    } else {\n        return {code: null, status: 500};\n    }\n\n}\nexport const startGame = async(gameCode) => {\n    db.collection('lobby').doc(gameCode).update({\n        inSession: true,\n    })    \n}\nexport const setUpGame = async(gameCode) => {\n    // return\n    let setUpSuccessful = false;\n    try{\n        let shuffledDeck = CardShuffler();\n        console.log(shuffledDeck);\n        await db.collection('lobby').doc(gameCode).update({\n            shuffledCards: shuffledDeck,\n            hints: 8,\n            fuse: 4\n        });\n        setUpSuccessful = true;\n    } catch(err){\n        console.log(err);\n    }\n    return setUpSuccessful;\n     \n}\nexport const joinLobby = async (gameCode) => {\n    console.log(gameCode)\n    let result = await verifyGameCode(gameCode);\n    if (result){\n        try{\n            db.collection('lobby').doc(gameCode).update({\n                playerCount: firebase.firestore.FieldValue.increment(1),\n                playerList: firebase.firestore.FieldValue.arrayUnion({name: auth.currentUser.displayName, id: auth.currentUser.uid})\n            });\n            return {code: gameCode, status: 200};\n        } catch (err){\n            console.log(err);\n        }\n    } else {\n        console.log(\"Join DID NOT WORK\")\n        return {code: null, status: 500};\n    }\n\n\n}\n\nexport const verifyGameCode = async(code) => {\n    return await db.collection('lobby').doc(code).get().then(querySnapshot => {return querySnapshot.exists;});\n}\n// const verifyPlayer = async(code) => {\n//     return await db.collection('lobby').doc(code).get().then(function(doc) {\n//         if (doc.exists) {\n//             for (let player = 0; player < doc.data().playerList )\n//             return doc.data().playerList;\n//         } else {\n//             // doc.data() will be undefined in this case\n//             console.log(\"No such document!\");\n//         }\n//     })\n// }\n// const getPlayerCount = async(code) => {\n//     return await db.collection('lobby').doc(code).get().then(function(doc) {\n//         if (doc.exists) {\n//             return doc.data().playerCount;\n//         } else {\n//             // doc.data() will be undefined in this case\n//             console.log(\"No such document!\");\n//         }\n//     })\n// }","/Users/omarp/workspace/React/Hanabi/src/pages/SignIn.js",["63","64","65"],"import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../services/firebase/firestore';\nimport Form from 'react-bootstrap/Form'\n\nexport default function SignIn() {\n    let history = useHistory();\n\n    \n    const handleSignIn = () =>{\n        FirestoreService.authSignIn();\n    }\n  \n    return (\n    <div className=\"Page-home-buttons\">\n        <Button variant=\"outline-primary\" size=\"lg\" onClick={handleSignIn}>Sign In</Button>\n    </div>  \n    );\n  }","/Users/omarp/workspace/React/Hanabi/src/pages/Home.js",["66","67","68","69"],"import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from \"react-router-dom\";\nimport * as FirestoreService from '../services/firebase/firestore';\nimport Form from 'react-bootstrap/Form'\nimport SignIn from \"./SignIn\";\nimport SignedIn from \"./SignedIn\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nexport default function Home() {\n    const [user] = useAuthState(FirestoreService.auth);\n    return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n        <h3>Hanabi</h3>\n    </header>\n    <body  className=\"App-body\">\n        {user ? <SignedIn /> : <SignIn /> } \n    </body>\n    </div>);\n}\n\n//   <Form.Group controlId=\"formBasicEmail\">\n//     <Form.Label>Email address</Form.Label>\n//     <Form.Control type=\"email\" placeholder=\"Enter email\" />\n//     <Form.Text className=\"text-muted\">\n//       We'll never share your email with anyone else.\n//     </Form.Text>\n//   </Form.Group>\n","/Users/omarp/workspace/React/Hanabi/src/pages/SignedIn.js",[],"/Users/omarp/workspace/React/Hanabi/src/pages/Lobby.js",["70","71","72","73","74","75"],"import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as FirestoreService from '../services/firebase/firestore';\nimport Form from 'react-bootstrap/Form'\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport SignIn from \"./SignIn\";\n\nfunction LobbyStart() {\n    const [user] = useAuthState(FirestoreService.auth);\n    let {code} = useParams();\n    console.log(code);\n\n    const query = FirestoreService.db.collection('lobby').where(\"code\", \"==\", code);\n    const [game, loading] = useCollectionData(query);\n    console.log(loading);\n    return (<div>\n        \n            {!loading && <Game game={game} user={user}/> }    \n        </div>\n        );\n}\n// function LobbyInvalid() {\n//     let history = useHistory();\n//     const reRoute = () =>{\n//         history.push(\"/\");\n//     }\n    \n//     return (<div>\n//                 <h1>This Lobby is invalid</h1>\n//                 {reRoute()}  \n//              </div>\n//         );\n// }\n\n// function PlayerList(props){\n//     let history = useHistory();\n//     const list = props.game[0].playerList;\n//     // console.log(list);\n//     const playerlist = list.map((player) => <h1>{player.name}</h1>);\n\n//     useEffect(() => { \n//         let playerValid = false;\n//         for(let player = 0; player < list.length; player++){\n//             if (list[player].name === props.user.displayName){\n//                 playerValid = true;\n//             }\n//         }\n//         if (playerValid === false){\n//             history.push(\"/\");\n//         } else {\n//             console.log(\"Great you belong here!\");\n//         }\n        \n//     });\n//     return (<div>{playerlist}</div>);\n// }\nfunction Game(props){\n    let history = useHistory();\n    console.log(\"This is Game loading...\")\n    const list = props.game[0].playerList;\n    // console.log(list);\n    const playerlist = list.map((player) => <h1>{player.name}</h1>);\n    let isHost = false;\n    if (props.game[0].host === props.user.uid){\n        isHost = true;\n    }\n    useEffect(() => { \n        let playerValid = false;\n        for(let player = 0; player < list.length; player++){\n            if (list[player].name === props.user.displayName){\n                playerValid = true;\n            }\n        }\n        if (playerValid === false){\n            history.push(\"/\");\n        } else {\n            console.log(\"Great you belong here!\");\n        }\n    }, []);\n\n    useEffect(() => { \n        if(props.game[0].inSession){\n            let url = \"/lobby/\"+props.game[0].code+\"/start\";\n            history.push(url);\n        }\n        \n    }, []);\n    return (<div>\n        <div>\n            <h1>Code</h1>\n        </div>\n        <div>\n            <h2>Players</h2>\n            <div>\n                <div>{playerlist}</div>\n            </div>\n        </div>\n        {isHost && <StartButton gameCode={props.game[0].code}/>}\n        </div>);\n}\nfunction StartButton(props){\n    //let setUpSuccessful = true;\n    const [startButtonClicked, setStartButtonClicked] = useState(false);\n    const handleStartGame = () => {\n        setStartButtonClicked(true);\n        let setUpSuccessful = FirestoreService.setUpGame(props.gameCode);\n        if(setUpSuccessful){\n            FirestoreService.startGame(props.gameCode);\n        } else {\n            console.log(\"Something went wrong, try again later!\");\n            setStartButtonClicked(false);\n        }\n    }\n return(<Button variant=\"outline-primary\" size=\"lg\" disabled={startButtonClicked} onClick={handleStartGame}>Start Game</Button>);\n//  <Button variant=\"outline-primary\" size=\"lg\" onClick={handleSignIn}>Sign In</Button>\n}\n\n\nexport default function Lobby() {\n    const [user] = useAuthState(FirestoreService.auth);\n    let {code} = useParams();\n    const [lobbyExist, setLobbyExist] = useState(false);\n\n    // const checkGameCode = async() => {\n    //     console.log(code);\n    //    let verified = await FirestoreService.verifyGameCode(code);\n    //    console.log(verified);\n    //    setLobbyExist(verified);\n    // }\n    \n    return (\n    \n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h3>Hanabi</h3>\n            </header>\n            <body  className=\"App-body\">\n                <div>\n                    {user && <LobbyStart />  }\n                    {!user &&  <SignIn />}\n                </div>\n            </body>\n        </div>\n    );\n}\n","/Users/omarp/workspace/React/Hanabi/src/tools/generator/CardShuffler.js",["76"],"function GetRandomIntForCards(){\n    return Math.floor(Math.random()*(49));\n}\nexport default function CardShuffler(){\n    let fireworksCard = [{colour: \"red\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}];\n    let selectedCards = [];\n    // let shuffledDeck = [];\n    // for (let position = 0; position < fireworksCard.length; position++){\n    //     let terminate = false;\n    //     while(!terminate){\n    //         let random = GetRandomIntForCards();\n    //         if (!selectedCards.includes(random)){\n    //             shuffledDeck.push(fireworksCard[random]);\n    //             selectedCards.push(random);\n    //             terminate = true;\n    //         }\n    //     }\n       \n    // } \n    for (let position = 0; position < fireworksCard.length/2; position++){\n        let random = GetRandomIntForCards();\n        let temp = fireworksCard[position];\n        fireworksCard[position] = fireworksCard[random];\n        fireworksCard[random] = temp;\n    }\n    return fireworksCard;\n}\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":31},{"ruleId":"81","severity":1,"message":"86","line":1,"column":33,"nodeType":"83","messageId":"84","endLine":1,"endColumn":41},{"ruleId":"77","replacedBy":"87"},{"ruleId":"79","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"89","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":22},{"ruleId":"81","severity":1,"message":"90","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":27},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"91","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":12},{"ruleId":"81","severity":1,"message":"92","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":16},{"ruleId":"81","severity":1,"message":"86","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"93","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"94","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":20},{"ruleId":"81","severity":1,"message":"91","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":12},{"ruleId":"81","severity":1,"message":"91","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":81,"column":8,"nodeType":"97","endLine":81,"endColumn":10,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":89,"column":8,"nodeType":"97","endLine":89,"endColumn":10,"suggestions":"100"},{"ruleId":"81","severity":1,"message":"101","line":123,"column":10,"nodeType":"83","messageId":"84","endLine":123,"endColumn":14},{"ruleId":"81","severity":1,"message":"102","line":124,"column":12,"nodeType":"83","messageId":"84","endLine":124,"endColumn":22},{"ruleId":"81","severity":1,"message":"103","line":124,"column":24,"nodeType":"83","messageId":"84","endLine":124,"endColumn":37},{"ruleId":"81","severity":1,"message":"104","line":6,"column":9,"nodeType":"83","messageId":"84","endLine":6,"endColumn":22},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","'useState' is defined but never used.",["105"],["106"],"'useAuthState' is defined but never used.","'useCollectionData' is defined but never used.","'Form' is defined but never used.","'history' is assigned a value but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'list', and 'props.user.displayName'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'history' and 'props.game'. Either include them or remove the dependency array.",["108"],"'code' is assigned a value but never used.","'lobbyExist' is assigned a value but never used.","'setLobbyExist' is assigned a value but never used.","'selectedCards' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [history, list, props.user.displayName]",{"range":"113","text":"114"},"Update the dependencies array to be: [history, props.game]",{"range":"115","text":"116"},[2551,2553],"[history, list, props.user.displayName]",[2735,2737],"[history, props.game]"]