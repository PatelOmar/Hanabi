{"ast":null,"code":"function GetRandomIntForAlphabet() {\n  return Math.floor(Math.random * 25);\n}\n\n_c = GetRandomIntForAlphabet;\nexport function GameCodeGenerator() {\n  let alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  let code = \"\";\n\n  for (let position = 0; position < 6; position++) {\n    code = code + alphabet[GetRandomIntForAlphabet];\n  }\n\n  return code;\n}\n_c2 = GameCodeGenerator;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetRandomIntForAlphabet\");\n$RefreshReg$(_c2, \"GameCodeGenerator\");","map":{"version":3,"sources":["/Users/omarp/workspace/React/Hanabi/src/tools/generator/GameCodeGenerator.js"],"names":["GetRandomIntForAlphabet","Math","floor","random","GameCodeGenerator","alphabet","code","position"],"mappings":"AAAA,SAASA,uBAAT,GAAkC;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAa,EAAxB,CAAP;AACH;;KAFQH,uB;AAGT,OAAO,SAASI,iBAAT,GAA4B;AAC/B,MAAIC,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,CAAf;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,CAAlC,EAAqCA,QAAQ,EAA7C,EAAgD;AAC5CD,IAAAA,IAAI,GAAGA,IAAI,GAAGD,QAAQ,CAACL,uBAAD,CAAtB;AACH;;AACD,SAAOM,IAAP;AACH;MAPeF,iB","sourcesContent":["function GetRandomIntForAlphabet(){\n    return Math.floor(Math.random*(25));\n}\nexport function GameCodeGenerator(){\n    let alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    let code = \"\";\n    for (let position = 0; position < 6; position++){\n        code = code + alphabet[GetRandomIntForAlphabet];\n    }\n    return code;\n}\n"]},"metadata":{},"sourceType":"module"}