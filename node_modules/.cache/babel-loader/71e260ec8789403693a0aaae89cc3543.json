{"ast":null,"code":"function GetRandomIntForCards() {\n  return Math.floor(Math.random() * 49);\n}\n\n_c = GetRandomIntForCards;\nexport default function CardShuffler() {\n  let fireworksCard = [{\n    colour: \"red\",\n    value: \"1\"\n  }, {\n    colour: \"red\",\n    value: \"1\"\n  }, {\n    colour: \"red\",\n    value: \"1\"\n  }, {\n    colour: \"red\",\n    value: \"2\"\n  }, {\n    colour: \"red\",\n    value: \"2\"\n  }, {\n    colour: \"red\",\n    value: \"3\"\n  }, {\n    colour: \"red\",\n    value: \"3\"\n  }, {\n    colour: \"red\",\n    value: \"4\"\n  }, {\n    colour: \"red\",\n    value: \"4\"\n  }, {\n    colour: \"red\",\n    value: \"5\"\n  }, {\n    colour: \"yellow\",\n    value: \"1\"\n  }, {\n    colour: \"yellow\",\n    value: \"1\"\n  }, {\n    colour: \"yellow\",\n    value: \"1\"\n  }, {\n    colour: \"yellow\",\n    value: \"2\"\n  }, {\n    colour: \"yellow\",\n    value: \"2\"\n  }, {\n    colour: \"yellow\",\n    value: \"3\"\n  }, {\n    colour: \"yellow\",\n    value: \"3\"\n  }, {\n    colour: \"yellow\",\n    value: \"4\"\n  }, {\n    colour: \"yellow\",\n    value: \"4\"\n  }, {\n    colour: \"yellow\",\n    value: \"5\"\n  }, {\n    colour: \"green\",\n    value: \"1\"\n  }, {\n    colour: \"green\",\n    value: \"1\"\n  }, {\n    colour: \"green\",\n    value: \"1\"\n  }, {\n    colour: \"green\",\n    value: \"2\"\n  }, {\n    colour: \"green\",\n    value: \"2\"\n  }, {\n    colour: \"green\",\n    value: \"3\"\n  }, {\n    colour: \"green\",\n    value: \"3\"\n  }, {\n    colour: \"green\",\n    value: \"4\"\n  }, {\n    colour: \"green\",\n    value: \"4\"\n  }, {\n    colour: \"green\",\n    value: \"5\"\n  }, {\n    colour: \"blue\",\n    value: \"1\"\n  }, {\n    colour: \"blue\",\n    value: \"1\"\n  }, {\n    colour: \"blue\",\n    value: \"1\"\n  }, {\n    colour: \"blue\",\n    value: \"2\"\n  }, {\n    colour: \"blue\",\n    value: \"2\"\n  }, {\n    colour: \"blue\",\n    value: \"3\"\n  }, {\n    colour: \"blue\",\n    value: \"3\"\n  }, {\n    colour: \"blue\",\n    value: \"4\"\n  }, {\n    colour: \"blue\",\n    value: \"4\"\n  }, {\n    colour: \"blue\",\n    value: \"5\"\n  }, {\n    colour: \"white\",\n    value: \"1\"\n  }, {\n    colour: \"white\",\n    value: \"1\"\n  }, {\n    colour: \"white\",\n    value: \"1\"\n  }, {\n    colour: \"white\",\n    value: \"2\"\n  }, {\n    colour: \"white\",\n    value: \"2\"\n  }, {\n    colour: \"white\",\n    value: \"3\"\n  }, {\n    colour: \"white\",\n    value: \"3\"\n  }, {\n    colour: \"white\",\n    value: \"4\"\n  }, {\n    colour: \"white\",\n    value: \"4\"\n  }, {\n    colour: \"white\",\n    value: \"5\"\n  }];\n  let selectedCards = [];\n  let shuffledDeck = [];\n\n  for (let position = 0; position < fireworksCard.length; position++) {\n    let random = GetRandomIntForCards();\n\n    if (!selectedCards.includes(random)) {\n      shuffledDeck.push(fireworksCard[random]);\n      selectedCards.push(random);\n    }\n  }\n\n  return shuffledDeck;\n}\n_c2 = CardShuffler;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetRandomIntForCards\");\n$RefreshReg$(_c2, \"CardShuffler\");","map":{"version":3,"sources":["/Users/omarp/workspace/React/Hanabi/src/tools/generator/CardShuffler.js"],"names":["GetRandomIntForCards","Math","floor","random","CardShuffler","fireworksCard","colour","value","selectedCards","shuffledDeck","position","length","includes","push"],"mappings":"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","sourcesContent":["function GetRandomIntForCards(){\n    return Math.floor(Math.random()*(49));\n}\nexport default function CardShuffler(){\n    let fireworksCard = [{colour: \"red\", value: \"1\"}, {colour: \"red\", value: \"1\"}, {colour: \"red\", value: \"1\"}, {colour: \"red\", value: \"2\"}, {colour: \"red\", value: \"2\"}, {colour: \"red\", value: \"3\"}, {colour: \"red\", value: \"3\"}, {colour: \"red\", value: \"4\"}, {colour: \"red\", value: \"4\"}, {colour: \"red\", value: \"5\"}, {colour: \"yellow\", value: \"1\"}, {colour: \"yellow\", value: \"1\"}, {colour: \"yellow\", value: \"1\"}, {colour: \"yellow\", value: \"2\"}, {colour: \"yellow\", value: \"2\"}, {colour: \"yellow\", value: \"3\"}, {colour: \"yellow\", value: \"3\"}, {colour: \"yellow\", value: \"4\"}, {colour: \"yellow\", value: \"4\"}, {colour: \"yellow\", value: \"5\"}, {colour: \"green\", value: \"1\"}, {colour: \"green\", value: \"1\"}, {colour: \"green\", value: \"1\"}, {colour: \"green\", value: \"2\"}, {colour: \"green\", value: \"2\"}, {colour: \"green\", value: \"3\"}, {colour: \"green\", value: \"3\"}, {colour: \"green\", value: \"4\"}, {colour: \"green\", value: \"4\"}, {colour: \"green\", value: \"5\"}, {colour: \"blue\", value: \"1\"}, {colour: \"blue\", value: \"1\"}, {colour: \"blue\", value: \"1\"}, {colour: \"blue\", value: \"2\"}, {colour: \"blue\", value: \"2\"}, {colour: \"blue\", value: \"3\"}, {colour: \"blue\", value: \"3\"}, {colour: \"blue\", value: \"4\"}, {colour: \"blue\", value: \"4\"}, {colour: \"blue\", value: \"5\"}, {colour: \"white\", value: \"1\"}, {colour: \"white\", value: \"1\"}, {colour: \"white\", value: \"1\"}, {colour: \"white\", value: \"2\"}, {colour: \"white\", value: \"2\"}, {colour: \"white\", value: \"3\"}, {colour: \"white\", value: \"3\"}, {colour: \"white\", value: \"4\"}, {colour: \"white\", value: \"4\"}, {colour: \"white\", value: \"5\"}];\n    let selectedCards = [];\n    let shuffledDeck = [];\n    for (let position = 0; position < fireworksCard.length; position++){\n        let random = GetRandomIntForCards();\n        if (!selectedCards.includes(random)){\n            shuffledDeck.push(fireworksCard[random]);\n            selectedCards.push(random);\n        }\n    } \n    return shuffledDeck;\n}\n"]},"metadata":{},"sourceType":"module"}