{"ast":null,"code":"function GetRandomIntForCards() {\n  return Math.floor(Math.random() * 49);\n}\n\n_c = GetRandomIntForCards;\nexport default function CardShuffler() {\n  let fireworksCard = [{\n    colour: \"red\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"red\",\n    value: \"5\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"yellow\",\n    value: \"5\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"green\",\n    value: \"5\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"1\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"2\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"3\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"4\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"blue\",\n    value: \"5\",\n    hint: {\n      colour: false,\n      value: false\n    },\n    notVisible: []\n  }, {\n    colour: \"white\",\n    value: \"1\"\n  }, {\n    colour: \"white\",\n    value: \"1\"\n  }, {\n    colour: \"white\",\n    value: \"1\"\n  }, {\n    colour: \"white\",\n    value: \"2\"\n  }, {\n    colour: \"white\",\n    value: \"2\"\n  }, {\n    colour: \"white\",\n    value: \"3\"\n  }, {\n    colour: \"white\",\n    value: \"3\"\n  }, {\n    colour: \"white\",\n    value: \"4\"\n  }, {\n    colour: \"white\",\n    value: \"4\"\n  }, {\n    colour: \"white\",\n    value: \"5\"\n  }];\n  let selectedCards = [];\n  let shuffledDeck = [];\n\n  for (let position = 0; position < fireworksCard.length; position++) {\n    let random = GetRandomIntForCards();\n\n    if (!selectedCards.includes(random)) {\n      shuffledDeck.push(fireworksCard[random]);\n      selectedCards.push(random);\n    }\n  }\n\n  return shuffledDeck;\n}\n_c2 = CardShuffler;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetRandomIntForCards\");\n$RefreshReg$(_c2, \"CardShuffler\");","map":{"version":3,"sources":["/Users/omarp/workspace/React/Hanabi/src/tools/generator/CardShuffler.js"],"names":["GetRandomIntForCards","Math","floor","random","CardShuffler","fireworksCard","colour","value","hint","notVisible","selectedCards","shuffledDeck","position","length","includes","push"],"mappings":"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","sourcesContent":["function GetRandomIntForCards(){\n    return Math.floor(Math.random()*(49));\n}\nexport default function CardShuffler(){\n    let fireworksCard = [{colour: \"red\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"red\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"yellow\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"green\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"1\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"2\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"3\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"4\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"blue\", value: \"5\", hint:{colour: false, value: false}, notVisible: []}, {colour: \"white\", value: \"1\"}, {colour: \"white\", value: \"1\"}, {colour: \"white\", value: \"1\"}, {colour: \"white\", value: \"2\"}, {colour: \"white\", value: \"2\"}, {colour: \"white\", value: \"3\"}, {colour: \"white\", value: \"3\"}, {colour: \"white\", value: \"4\"}, {colour: \"white\", value: \"4\"}, {colour: \"white\", value: \"5\"}];\n    let selectedCards = [];\n    let shuffledDeck = [];\n    for (let position = 0; position < fireworksCard.length; position++){\n        let random = GetRandomIntForCards();\n        if (!selectedCards.includes(random)){\n            shuffledDeck.push(fireworksCard[random]);\n            selectedCards.push(random);\n        }\n    } \n    return shuffledDeck;\n}\n"]},"metadata":{},"sourceType":"module"}